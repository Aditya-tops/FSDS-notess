RUNNING NOTES: 29 - NOV - 2024
--------------------------------

1. PREVIOUS TOPIC			-	FLOW CONTROL
2. CURRENT TOPIC			-	STRING
3. UPCOMING TOPIC			-	FUNCTIONS PART 1

----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

----------------------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done

10. PYTHON - STRING			-	Running topic

11. PYTHON - FUNCTIONS - PART - 1	-	Upcoming topic

----------------------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. ValueError
4. IndexError
5. IndentationError

6. AttributeError


--------------------------------

10. PYTHON - STRING	
-------------------

Methods in str class
Methods in list class
Methods in tuple class
Methods in set class
Methods in dict class

Methods in Series class
Methods in DataFrame class

Methods in LinearRegression

--------------------------------

Methods in str class

1. str is predefined class
2. class contains methods

--------------------------------

Any python program

	1. Procedure oriented approach
	2. Function oriented approach
	3. Object oriented approach

--------------------------------

1. Procedure oriented approach

-> Writing a program by using procedure

--------------------------------

2. Function oriented approach

-> Writing a program by using function

Function
--------

	1. How to create a function
	2. How to call a function

--------------------------------

def naresh():
	print("Hello Good evening")

naresh()

--------------------------------

Methods in str class

3. Object oriented approach

	1. How to create a class
	2. How to create methods inside the class
	3. How to create an object to a class
	4. How to call a method

--------------------------------

class Daniel:
	def working(self):
		print("AI Engineer")
	def walking(self):
		print("I like morning walk")

d = Daniel()

d.working()
d.walking()

--------------------------------

class
	methods

Daniel
	working
	walking

str
	upper()
	lower()
	...

--------------------------------

class Daniel:
	def working(self):
		print("AI Engineer")
	def walking(self):
		print("I like morning walk")

d = Daniel()

d.working()
d.walking()

Display all methods from class

Ans: We can display by using dir() function

print(dir(Daniel))

--------------------------------

class Daniel:
	def working(self):
		print("AI Engineer")
	def walking(self):
		print("I like morning walk")

d = Daniel()

d.working()
d.walking()

print(dir(Daniel))

--------------------------------

s = "daniel"

print(s)
print(s.upper())

s		->	Name of the object to str class
upper()		->	Predefined in str class
s.upper()	->	We are calling upper() method 
			by using object

--------------------------------

s = "naresh"

print(s)
print(s.upper())

# upper() is method in str class

# Method we should call by using object

--------------------------------

s = "NARESH"

print(s)
print(s.lower())

--------------------------------

from Shafeena to everyone:    5:58 PM
Sir if i wan to print fisrt letter  in capital remaining in lower letters. can we do it?

s = "naresh"

print(s)
print(s.title())

--------------------------------

upper()

-> Methods existing in str class
-> Access: We can call method by using object
-> Action: It is converting from lower to case letters to upper case

--------------------------------

s = "NARESH abc"

print(s)
print(s.upper())

--------------------------------

s = "abc123def"

print(s)
print(s.upper())

--------------------------------

class Daniel:
	def working(self):
		print("AI Engineer")


d = Daniel()
d.WORKING()

-> While we are calling method, method name should be match otherwise we will get AttributeError

--------------------------------

s = "naresh"

print(s.upperasjhdf())	#	AttributeError

--------------------------------

Question
--------

Sir, can we call the method without object directly using class name like Daniel.working()

Ans:
----

class
	methods
		1. instance	->	object	100%
		2. static	->	class	1%
		3. class	->	class	1%



--------------------------------

s = "Hello Good Evening"

print(s)

--------------------------------

s = "       Daniel    "

print(s)
print(len(s))

--------------------------------

s1 = "       Hello Daniel     "
s2 = s1.strip()

print(s1)
print(len(s1))
print()
print(s2)
print(len(s2))

--------------------------------

s1 = "    Hello    "
s2 = "Hi    "

s3 = s1.strip()
s4 = s2.strip()

print(s1)
print(s2)
print()
print(s3)
print(s4)

--------------------------------

s1 = "       Hello Daniel     "
s2 = s1.strip()

print(s1)
print(len(s1))
print()
print(s2)
print(len(s2))

Functions	->	print(), len()
method		->	strip()

--------------------------------

s1 = "      hello       "
s2 = s1.strip()

print(s1)
print(s2.upper())

--------------------------------

s1 = "      hello       "
s2 = s1.strip()
s3 = s2.upper()

print(s1)
print(s2)
print(s3)

--------------------------------

s1 = "     hello        "

print(s1.strip().upper())

--------------------------------

Methods in str class

s		->	Name of object

1. s.upper()
2. s.lower()
3. s.strip()

4. s.STRIP()	->	:(

--------------------------------

from Mahesh Varma to everyone:    6:27 PM
sir if the words are random and i want them as a proper statement. is is available sir

Ans:

Absolutely possibel by using NLP(expecially spacy library)

--------------------------------

s = "Daniel is taching and Daniel is walking"

print(s.count("Daniel"))


--------------------------------

s = "Daniel is taching and Daniel is walking"

print(s.count("Danielsladhkfjsl"))

--------------------------------

s1 = str("  Hello          ")
s2 = "World   "

s3 = (s1+s2).strip()

# Try to apply separately then we can join

print(s3)

--------------------------------

replace(p1, p2) method

IMP interview question :)

s1 = "Java programming language"
s2 = s1.replace("Java", "Python")

print(s1)
print(s2)

--------------------------------

String having immutable nature, means once we crate string object then we cannot change

then how here it is changing :)

--------------------------------

s1 = "Java programming language"
s2 = s1.replace("Java", "Python")

print(s1)
print(s2)

--------------------------------

s1 = "Java programming language"
s2 = s1.replace("Java", "Python")

print(s1)
print(s2)

--------------------------------

11.5. replace(p1, p2) method

Next session :)

--------------------------------


Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom


----------------------------------------------------------------	


Trainer mail id:
----------------

danielgenai77@gmail.com

Please install:	AnyDesk

Lab mentors:	offline/online

Sub:	5.30 PM

Explain : Ask a question


----------------------------------------------------------------	