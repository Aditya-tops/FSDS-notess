RUNNING NOTES: 11 - FEB - 2025
--------------------------------

1. PREVIOUS TOPIC			-	EDA PROJECT
2. CURRENT TOPIC			-	DATA VIZ PART 1
3. UPCOMING TOPIC			-	DATA VIZ PART 2
						         

----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

--------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done
10. PYTHON - STRING			-	Done
11. PYTHON - FUNCTIONS - PART - 1	-	Done
12. PYTHON - FUNCTIONS - PART - 2	-	Done
13. PYTHON - MODULE			-	Done
14. PYTHON - PACKAGE			-	Done
15. PYTHON - LIST DATA STRUCUTRE	-	Done
16. PYTHON - TUPLE DATA STRUCUTRE	-	Done
17. PYTHON - SET DATA STRUCUTRE		-	Done
18. PYTHON - DICTIONARY DATA STRUCUTRE	-	Done
19. PYTHON - OBJECT ORIENTED 		-	Done
	PROGRAMMING	

--------------------------------------------------


DATA ANALYSIS				
-------------

1. PANDAS - INTRODUCTION		-	Done
2. PANDAS - SERIES - INTRODUCTION	-	Done
3. PANDAS - NAN VALUE			-	Done
4. PANDAS - SERIES - ATTRIBUTES		-	Done
5. PANDAS - SERIES - METHODS		-	Done
6. PANDAS - DATAFRAME INTRODUCTION	-	Done
7. PANDAS - DATAFRAME - LOADING 	-	Done
	DIFFERENT FILES

8. PANDAS - DATAFRAME - ATTRIBUTES	-	Done
9. PANDAS - DATAFRAME - METHODS		-	Done

10. PANDAS - DATAFRAME - RENAMING 	-	Done
	COLUMN, INDEX

11. PANDAS - DATAFRAME - INPLACE 	-	Done
	PARAMETER

12. PANDAS -DATAFRAME - HANDLING 	-	Done
	MISSING NAN VALUES

13. PANDAS - DATAFRAME - SELECTION 	- 	Done
	LOC, ILOC

14. PANDAS - DATAFRAME - FILTERING	-	Done

15. PANDAS - DATAFRAME - SORTING	-	Done

16. PANDAS - DATAFRAME - GROUPBY	-	Done

17. PANDAS - DATAFRAME - MERGING 	-	Done
	OR JOINING

18. PANDAS - DATAFRAME - CONCAT		-	Done

19. PANDAS - DATAFRAME - ADDING, 	-	Done
	DROPPING ROWS AND COLUMNS

20. PANDAS - DATAFRAME - DATE AND 	-	Done
	TIME OPERATIONS

21. PANDAS - DATAFRAME - CONCATENATING	-	Done 
	MULTIPLE CSV FILES

--------------------------------------------------

DATA ANALYSIS PROJECT
---------------------

1. EDA PROJECT				-	Done

--------------------------------------------------

DATA VISUALIZATION
------------------

1. DATA VISUALIZATION PART 1		-	Running topic

2. DATA VISUALIZATION PART 2		-	Upcoming topic


--------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

6. float(p)		->	To convert to float
7. int(p)		->	To convert to int
8. list(p)		->	Convert from seq to list
9. tuple(p)		->	Convert from seq to tuple
10. set(p)		->	Convert from seq to set

11. dict(p)		->	Convert from list of tups to dict

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. KeyError
4. ValueError
5. TypeError

6. IndexError
7. IndentationError
8. AttributeError
9. ModuleNotFoundError
10. FileNotFoundError

--------------------------------

1. DATA VISUALIZATION PART 1
----------------------------

Amazon ceo is asking, Wanted to know, last 4 yrs business

Raw Data

	2021	->	100 Cr
	2022	->	200 Cr
	2023	->	300 Cr
	2024	->	400 Cr

Lets created viz....

	input		output
X		y

2021	->	100 Cr
2022	->	200 Cr
2023	->	300 Cr
2024	->	400 Cr

----------------------------

-> In Data Science project, Data Viz can be on an average 10% of the task

Data Visualization we can do in two ways

-> With python
	-> matplotlib
	-> seaborn
	-> plotly

-> Without python(With tools)
	-> Power BI
	-> Tablue
	-> QuickView
	-> IBM tools etc

----------------------------

Relationship

	Area		Rice packs
	---------------------------
	1		10
	2		20
	3		30
	4		40

-> If Area column is increasing the Rice packs also will be increase. So, both colums having relationship each other

----------------------------



Data Science

Program		->	Python
Data Analysis	->	pandas library
Data Viz	->	matplotlib library
		->	pip install matplotlib 

ML		->	scikit-learn library


----------------------------

Creating Line chart
--------------------

Python program		->	Output command prompt
Pandas program		->	Output command prompt

matplotlib program	->	Output in image formate
				We will output in image

----------------------------

# Creating line chart

import matplotlib.pyplot as plt

x = [5, 6]
y = [5, 6]

plt.plot(x, y)

plt.show()

----------------------------

Kind note:
----------
-> Once after we closed the image then we point in command prompt we can see in next line

----------------------------

# Creating line chart, cutomising

import matplotlib.pyplot as plt

x = [5, 6]
y = [5, 6]

plt.plot(x, y, marker = '*')

plt.show()

----------------------------

# Creating line chart, cutomising

import matplotlib.pyplot as plt

x = [5, 6, 9]
y = [5, 6, 20]

plt.plot(x, y, marker = '*')

plt.show()

----------------------------

# title() function

import matplotlib.pyplot as plt

x = [5, 6, 9]
y = [5, 6, 20]

plt.title("Boss it is a line graph")

plt.plot(x, y, marker = '*')

plt.show()

----------------------------

# xlabel() and ylabel() function

import matplotlib.pyplot as plt

x = [5, 6, 9]
y = [5, 6, 20]

plt.title("A line graph")

plt.xlabel("X values")
plt.ylabel("Y values")

plt.plot(x, y, marker = '*')

plt.show()

----------------------------

# Creating two line charts

import matplotlib.pyplot as plt

x = [5, 6, 9]
y = [5, 6, 20]
p = [10, 20, 25]

plt.title("A line graph")

plt.xlabel("X values")
plt.ylabel("Y values")

plt.plot(x, y, marker = '*')
plt.plot(x, p, marker = '*')

plt.show()


----------------------------

# Bar graph/chart

-> We can represent the data in categorical/String data then we can apply Bar graph

-> By default is vertical representation


import matplotlib.pyplot as plt

months = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sep", "Oct", "Nov", "Dec"]

sales = [23, 45, 56, 78, 213, 45, 78, 89, 99, 100, 101, 130]

plt.title('A Bar Graph')

plt.xlabel('Month')
plt.ylabel('Product Sales')

plt.bar(months, sales)

plt.show()


----------------------------

# Horizontal Bar graph/chart

import matplotlib.pyplot as plt

months = ["Jan", "Feb", "Mar", "Apr", "May", "June", "July", "Aug", "Sep", "Oct", "Nov", "Dec"]

sales = [23, 45, 56, 78, 213, 45, 78, 89, 99, 100, 101, 130]

plt.title('A Bar Graph')

plt.xlabel('Month')
plt.ylabel('Product Sales')

plt.barh(months, sales)

plt.show()

----------------------------

# Creating bar graph from sales11.csv file

import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv("sales11.csv")

plt.title('A Bar Graph')

plt.xlabel('Month')
plt.ylabel('Product Sales')

plt.bar(df.month, df.sales)

plt.show()

----------------------------

# Creating bar graph

import matplotlib.pyplot as plt
import pandas as pd

df = pd.read_csv("sales11.csv")

plt.title('A Bar Graph')

plt.xlabel('Month')
plt.ylabel('Product Sales')

plt.bar(df.month, df.sales, width = 1.0)

plt.show()

----------------------------

-> We done today session

-> Daniel

---------------------------------

Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom

--------------------------------
