RUNNING NOTES: 14 - FEB - 2025
--------------------------------

1. PREVIOUS TOPIC			-	DATA VIZ PART 1
2. CURRENT TOPIC			-	DATA VIZ PART 2
3. UPCOMING TOPIC			-	NUMPY
						         

----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

--------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done
10. PYTHON - STRING			-	Done
11. PYTHON - FUNCTIONS - PART - 1	-	Done
12. PYTHON - FUNCTIONS - PART - 2	-	Done
13. PYTHON - MODULE			-	Done
14. PYTHON - PACKAGE			-	Done
15. PYTHON - LIST DATA STRUCUTRE	-	Done
16. PYTHON - TUPLE DATA STRUCUTRE	-	Done
17. PYTHON - SET DATA STRUCUTRE		-	Done
18. PYTHON - DICTIONARY DATA STRUCUTRE	-	Done
19. PYTHON - OBJECT ORIENTED 		-	Done
	PROGRAMMING	

--------------------------------------------------


DATA ANALYSIS				
-------------

1. PANDAS - INTRODUCTION		-	Done
2. PANDAS - SERIES - INTRODUCTION	-	Done
3. PANDAS - NAN VALUE			-	Done
4. PANDAS - SERIES - ATTRIBUTES		-	Done
5. PANDAS - SERIES - METHODS		-	Done
6. PANDAS - DATAFRAME INTRODUCTION	-	Done
7. PANDAS - DATAFRAME - LOADING 	-	Done
	DIFFERENT FILES

8. PANDAS - DATAFRAME - ATTRIBUTES	-	Done
9. PANDAS - DATAFRAME - METHODS		-	Done

10. PANDAS - DATAFRAME - RENAMING 	-	Done
	COLUMN, INDEX

11. PANDAS - DATAFRAME - INPLACE 	-	Done
	PARAMETER

12. PANDAS -DATAFRAME - HANDLING 	-	Done
	MISSING NAN VALUES

13. PANDAS - DATAFRAME - SELECTION 	- 	Done
	LOC, ILOC

14. PANDAS - DATAFRAME - FILTERING	-	Done

15. PANDAS - DATAFRAME - SORTING	-	Done

16. PANDAS - DATAFRAME - GROUPBY	-	Done

17. PANDAS - DATAFRAME - MERGING 	-	Done
	OR JOINING

18. PANDAS - DATAFRAME - CONCAT		-	Done

19. PANDAS - DATAFRAME - ADDING, 	-	Done
	DROPPING ROWS AND COLUMNS

20. PANDAS - DATAFRAME - DATE AND 	-	Done
	TIME OPERATIONS

21. PANDAS - DATAFRAME - CONCATENATING	-	Done 
	MULTIPLE CSV FILES

--------------------------------------------------

DATA ANALYSIS PROJECT
---------------------

1. EDA PROJECT				-	Done

--------------------------------------------------

DATA VISUALIZATION
------------------

1. DATA VISUALIZATION PART 1		-	Done

2. DATA VISUALIZATION PART 2		-	Done

3. DATA VISUALIZATION FUNDAMENTALS	-	Assignment

4. DATA VISUALIZATION POWER BI		-	Upcoming topic			
--------------------------------------------------

NUMPY
-----

1. NUMPY INTRODUCTION			-	Running topic


--------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

6. float(p)		->	To convert to float
7. int(p)		->	To convert to int
8. list(p)		->	Convert from seq to list
9. tuple(p)		->	Convert from seq to tuple
10. set(p)		->	Convert from seq to set

11. dict(p)		->	Convert from list of tups to dict

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. KeyError
4. ValueError
5. TypeError

6. IndexError
7. IndentationError
8. AttributeError
9. ModuleNotFoundError
10. FileNotFoundError

--------------------------------

2. DATA VISUALIZATION PART 2
----------------------------


-> matplotlib
-> seaborn

-> public dataset: titanic dataset
-> Few guys are survice and others not survived
-> What might be the reason for survive and not not survive
-> We need to do Data Analysis
-> Pandas & Data Viz

----------------------------

Survived:	Class
Survived:	Class, Gender
Survived:	Class, Gender, Age

----------------------------

# How the Data Distributed

import matplotlib.pyplot as plt
import seaborn as sns

import warnings
warnings.filterwarnings('ignore')

df = sns.load_dataset('titanic')
sns.distplot(df['fare'])

plt.show()

----------------------------


13. Box Plot/14. Violin Plot

-> I will cover later, means duing maths I will cover Boss

----------------------------

# WordCloud example

import matplotlib.pyplot as plt
from wordcloud import WordCloud

text = "DC txn success Bank txn failed CC txn success Daniel Daniel Daniel Daniel Daniel"

wc = WordCloud()
wc.generate(text)

plt.figure(figsize = (12, 12))
plt.imshow(wc)

plt.axis('off')
plt.show()

----------------------------

# WordCloud example
# It takes care about unuseful words


import matplotlib.pyplot as plt
from wordcloud import WordCloud

text = "this is daniel this is daniel this is daniel"

# backend it will apply one topic: stop words
# This we will discuss during NLP topic

wc = WordCloud()
wc.generate(text)

plt.figure(figsize = (12, 12))
plt.imshow(wc)

plt.axis('off')
plt.show()

----------------------------

# Using plotly to create Data Visualization

import plotly.express as px

data = px.data.tips()

figure = px.sunburst(
	data, 
	path = ["day", "sex"], 
	values = "total_bill"
)

figure.show()

----------------------------

1. NUMPY INTRODUCTION
---------------------

Machine Learning Flow
---------------------

Data

	DataFrame

		Feature Engg

				Array(by using numpy)

					Machine Learning Alg


----------------------------

Python	->	A group of topics
		Data Structurs
		Functions
		OOPS

Pandas	->	Series, DataFrame

numpy	->	array

----------------------------

		Data Structures
		---------------

	Python		Pandas		Numpy
	-------------------------------------

	list		Series		array
	tuple		DataFrame
	set
	dict

10 cr
sum	60 seconds	20 seconds	0.2 nano seconds

	Passenger	Express		Vande Bharath


----------------------------

How to install numpy?

pip install numpy

-> If we install pandas then is inbuilt on top of pandas


----------------------------

Python is open source

-> Creator 	->	Guido Van Rossum
		->	iDea
		->	It is not possible to create whole
		
-> Team

-> He will 	->	I am lookking for open source dev
		->	If anyone is already working in company
		->	Daniel: Google, I can apply this
	
Charity		->	Money
		->	Time

----------------------------


Daniel		->	Hyd	
		->	Company name(small company)
		->	Python open source team

Resume		->	Working with Python open source team

No interview	->	daniel@python.org


----------------------------

What is benefit	->	to creator

		->	Google		60%

Python		->	Open source
		->	We no need to pay any money

Data Sci lib	->	Open source

Open source	->	Download freely, we can use







Java	->	Master in web application creation

Python	->	Master in Data skills

Diff	->	Image wanted to load
		Java, lib very less lib

Python		lot of libraries


Java	->	Speed
Python	->	Slow(Aceepted)
	->	lib: numba	python became superfast



---------------------------------

Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom

--------------------------------
