RUNNING NOTES: 05 - MAR - 2025
--------------------------------

1. PREVIOUS TOPIC			-	FEATURE ENGG
2. CURRENT TOPIC			-	MACHINE LEARNING TERMS
3. UPCOMING TOPIC			-	DATA & ML ALGS
									         

----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

--------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done
10. PYTHON - STRING			-	Done
11. PYTHON - FUNCTIONS - PART - 1	-	Done
12. PYTHON - FUNCTIONS - PART - 2	-	Done
13. PYTHON - MODULE			-	Done
14. PYTHON - PACKAGE			-	Done
15. PYTHON - LIST DATA STRUCUTRE	-	Done
16. PYTHON - TUPLE DATA STRUCUTRE	-	Done
17. PYTHON - SET DATA STRUCUTRE		-	Done
18. PYTHON - DICTIONARY DATA STRUCUTRE	-	Done
19. PYTHON - OBJECT ORIENTED 		-	Done
	PROGRAMMING	

--------------------------------------------------

DATA ANALYSIS				
-------------

1. PANDAS - INTRODUCTION		-	Done
2. PANDAS - SERIES - INTRODUCTION	-	Done
3. PANDAS - NAN VALUE			-	Done
4. PANDAS - SERIES - ATTRIBUTES		-	Done
5. PANDAS - SERIES - METHODS		-	Done
6. PANDAS - DATAFRAME INTRODUCTION	-	Done
7. PANDAS - DATAFRAME - LOADING 	-	Done
	DIFFERENT FILES

8. PANDAS - DATAFRAME - ATTRIBUTES	-	Done
9. PANDAS - DATAFRAME - METHODS		-	Done

10. PANDAS - DATAFRAME - RENAMING 	-	Done
	COLUMN, INDEX

11. PANDAS - DATAFRAME - INPLACE 	-	Done
	PARAMETER

12. PANDAS -DATAFRAME - HANDLING 	-	Done
	MISSING NAN VALUES

13. PANDAS - DATAFRAME - SELECTION 	- 	Done
	LOC, ILOC

14. PANDAS - DATAFRAME - FILTERING	-	Done

15. PANDAS - DATAFRAME - SORTING	-	Done

16. PANDAS - DATAFRAME - GROUPBY	-	Done

17. PANDAS - DATAFRAME - MERGING 	-	Done
	OR JOINING

18. PANDAS - DATAFRAME - CONCAT		-	Done

19. PANDAS - DATAFRAME - ADDING, 	-	Done
	DROPPING ROWS AND COLUMNS

20. PANDAS - DATAFRAME - DATE AND 	-	Done
	TIME OPERATIONS

21. PANDAS - DATAFRAME - CONCATENATING	-	Done 
	MULTIPLE CSV FILES

--------------------------------------------------

DATA ANALYSIS PROJECT
---------------------

1. EDA PROJECT				-	Done

--------------------------------------------------

DATA VISUALIZATION
------------------

1. DATA VISUALIZATION PART 1		-	Done
2. DATA VISUALIZATION PART 2		-	Done
3. DATA VISUALIZATION FUNDAMENTALS	-	Done


4. DATA VISUALIZATION POWER BI		-	Upcoming topic	
		
--------------------------------------------------

NUMPY
-----

1. NUMPY INTRODUCTION			-	Done
2. NUMPY FUNDAMENTALS			-	Done
3. NUMPY ATTRIBUTES			-	Done
4. NUMPY METHODS			-	Done

--------------------------------------------------

MATHS						STATUS
-----						------

1. MATHS - PART - 1 - POPULATION, 	-	Done
	SAMPLE, TYPES OF VARIABLES


2. MATHS - PART - 2 - MODE, MEDIAN, 	-	Done
	MEAN, RANGE, 
	STANDARD DEVIATION, VARIANCE	


3. MATHS - PART - 3 - OUTLIERS		-	Done


4. MATHS - PART - 4 - THE FIVE NUMBERS	-	Done
	SUMMARY, BOX PLOT, OUTLIER


5. MATHS - PART - 5 - SYMMETRY AND 	-	Done
	SKEWNESS


6. MATHS - PART - 6 - EXPLANATORY AND 	-	Done
	RESPONSIVE VARIABLES


7. MATHS - PART - 7 - REGRESSION 	-	Done
	AND R SQUARED


8. MATHS - PART - 8 - RESIDUALS		-	Done


9. MATHS - PART - 9 - THE NORMAL 	-	Hold
	DISTRIBUTION AND 
	68-95-99.7 RULE

10. MATHS - PART - 10 - MATRIX		-	Done

--------------------------------------------------

FEATURE ENGINEERING
-------------------

1. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 1	-	Done


2. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 2	-	Done

--------------------------------------------------

MACHINE LEARNING
----------------

1. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	INTRODUCTION

2. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TERMINOLOGY

3. DATA SCIENCE - MACHINE LEARNING 	- 	Running topic
	DATA AND ML ALGORITHMS

4. DATA SCIENCE - MACHINE LEARNING 	- 	Upcoming topic
	LEARNING FUNCTION


--------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

6. float(p)		->	To convert to float
7. int(p)		->	To convert to int
8. list(p)		->	Convert from seq to list
9. tuple(p)		->	Convert from seq to tuple
10. set(p)		->	Convert from seq to set

11. dict(p)		->	Convert from list of tups to dict

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. KeyError
4. ValueError
5. TypeError

6. IndexError
7. IndentationError
8. AttributeError
9. ModuleNotFoundError
10. FileNotFoundError

11. InvalidParameterError

--------------------------------

2. DATA SCIENCE - MACHINE LEARNING 
	TERMINOLOGY

--------------------------------

ML flow
-------

Data
	DataFrame
		Feature Engg
				Array
					Machine Learning Algorithm
					Cost function
					Gradient Descent Algorithm
						Increase accuracy
						Reduce Error


ML steps
--------

	1. Importing the libraries
	2. Loading the dataset
	3. Data preparation
	4. Splitting the dataset
	5. Model creation
	6. Model training
	7. Prediction

--------------------------------

Python terminology

-> Flow control, list, tuple, set, dictionary, class, object etc

Pandas terminilogy

-> Series, DataFrame, sorting, filtering, groupby

--------------------------------

ML terminology
---------------

Best Example
------------

Father		->	Jeswant
Small son	->	Daniel(3 yrs of old)
Father concern	->	He wants to train his son to recognize
			cat/dog

Shop		->	50 cat + 50 dog images

Bakc to 	->	Home

First operation	->	Shuffled the images
	
Second ope	->	Splitting the images

Splitting	->	70 : 30

70 images	->	Training purpose
30 images	->	testing purpose

Before training	->	Daniel having ZERO knowledge about cat/dog

Training starts	->	With training dataset
		->	70 images

i1		->	Dog(4 legs, black, small)	1%
i2		->	Dog(4 legs, white, small)
i3		->	Cat(4 legs, white, big)		5%
......
i70		->	Dog(4 legs, brown, big)		90%

Training is done->	I gain lot of knowledge(Patterns)



Start testing	->	giving test with 90% knowledge

			my ans		original
i71		->	Dog		Dog	 1 mark
i72		->	Dog		Dog	....
....
i100		->	Cat		Dog	wrong


Score		->	27/30

--------------------------------


Jeswanth	->	Data Scientist
Daniel		->	Machine Learning Algorithm
Images 100	->	Total Data
First operation	->	Shuffling 
Second ope	->	Splitting 

Splitting	->	70:30 ratio

70		->	Training Dataset
30		->	Testing dataset

We need to train ML alg(model) with Training Dataset

Before training	->	ML alg having ZERO knowledge

Training start	->	ML alg
		->	.....
		
After training	->	ML alg gain, lot of knowledge

Done

Testing		->	by using testing dataset
		->	30 testing dataset

testing		->	To check accuracy

Testing also	->	done

If ml alg is doing good prediction then deploy the model otherwise retrain the model

--------------------------------

Training is Done
Testing started

Case 1
------

During testing	->	27/30		Good score

Case 2
-------

During testing	->	5/30		Bad score

Retraining is required

After retraing

testing		->	Why?
		->	To check accuracy

		->	25/30		Good score


--------------------------------

More data means more knowledge

Why my father collect 100 images

Ans: Bcoz, more data means more knowledge

--------------------------------

3. Data Science – Machine Learning 
	– Data & ML Algorithm

--------------------------------


Data
	-> Mathematian,	How he can understand data?
	-> ML Engineer, How he can understand data?
	-> Computer Sci student: How he can understand data?

--------------------------------

Apple
	Home		->	fruit
	Company		->	apple company

--------------------------------

Data1
	input		output
	independent	dependent
	X		y

	Area		Rice packs
	---------------------------
	1		10
	2		20
	3		30

pd
	shape, columns, head(), tail(), info(), describe()
	min, max

ML	Learning function(formula) from data

	rice_packs = area * 10

--------------------------------

ML
---
	rice_packs = area * 10

	output = f(input)

	output variable = f(input variable)


Here	input can be number of columns too

Data2
	input1	input2			output

	Area	Perstisides		Rice packs
	------------------------------------------
	1	T1			10
	2	T2			20
	3	T3			30



here we have two inputs:	Vector


--------------------------------

	output = f(input)

	Dependent var = f(Independent var)

	y = f(X)


--------------------------------

We done today session

-> Daniel

--------------------------------

Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom

--------------------------------
