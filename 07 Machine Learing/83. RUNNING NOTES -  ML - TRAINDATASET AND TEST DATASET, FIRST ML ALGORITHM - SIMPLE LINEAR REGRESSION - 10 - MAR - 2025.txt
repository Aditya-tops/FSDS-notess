RUNNING NOTES: 10 - MAR - 2025
--------------------------------

1. PREVIOUS TOPIC			-	LIFE CYCLE
2. CURRENT TOPIC			-	TRAIN TEST SPLIT
3. UPCOMING TOPIC			-	FIRST ML ALGORITHM
									         

----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

--------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done
10. PYTHON - STRING			-	Done
11. PYTHON - FUNCTIONS - PART - 1	-	Done
12. PYTHON - FUNCTIONS - PART - 2	-	Done
13. PYTHON - MODULE			-	Done
14. PYTHON - PACKAGE			-	Done
15. PYTHON - LIST DATA STRUCUTRE	-	Done
16. PYTHON - TUPLE DATA STRUCUTRE	-	Done
17. PYTHON - SET DATA STRUCUTRE		-	Done
18. PYTHON - DICTIONARY DATA STRUCUTRE	-	Done
19. PYTHON - OBJECT ORIENTED 		-	Done
	PROGRAMMING	

--------------------------------------------------

DATA ANALYSIS				
-------------

1. PANDAS - INTRODUCTION		-	Done
2. PANDAS - SERIES - INTRODUCTION	-	Done
3. PANDAS - NAN VALUE			-	Done
4. PANDAS - SERIES - ATTRIBUTES		-	Done
5. PANDAS - SERIES - METHODS		-	Done
6. PANDAS - DATAFRAME INTRODUCTION	-	Done
7. PANDAS - DATAFRAME - LOADING 	-	Done
	DIFFERENT FILES

8. PANDAS - DATAFRAME - ATTRIBUTES	-	Done
9. PANDAS - DATAFRAME - METHODS		-	Done

10. PANDAS - DATAFRAME - RENAMING 	-	Done
	COLUMN, INDEX

11. PANDAS - DATAFRAME - INPLACE 	-	Done
	PARAMETER

12. PANDAS -DATAFRAME - HANDLING 	-	Done
	MISSING NAN VALUES

13. PANDAS - DATAFRAME - SELECTION 	- 	Done
	LOC, ILOC

14. PANDAS - DATAFRAME - FILTERING	-	Done

15. PANDAS - DATAFRAME - SORTING	-	Done

16. PANDAS - DATAFRAME - GROUPBY	-	Done

17. PANDAS - DATAFRAME - MERGING 	-	Done
	OR JOINING

18. PANDAS - DATAFRAME - CONCAT		-	Done

19. PANDAS - DATAFRAME - ADDING, 	-	Done
	DROPPING ROWS AND COLUMNS

20. PANDAS - DATAFRAME - DATE AND 	-	Done
	TIME OPERATIONS

21. PANDAS - DATAFRAME - CONCATENATING	-	Done 
	MULTIPLE CSV FILES

--------------------------------------------------

DATA ANALYSIS PROJECT
---------------------

1. EDA PROJECT				-	Done

--------------------------------------------------

DATA VISUALIZATION
------------------

1. DATA VISUALIZATION PART 1		-	Done
2. DATA VISUALIZATION PART 2		-	Done
3. DATA VISUALIZATION FUNDAMENTALS	-	Done

4. DATA VISUALIZATION POWER BI		-	Upcoming topic	
		
--------------------------------------------------

NUMPY
-----

1. NUMPY INTRODUCTION			-	Done
2. NUMPY FUNDAMENTALS			-	Done
3. NUMPY ATTRIBUTES			-	Done
4. NUMPY METHODS			-	Done

--------------------------------------------------

MATHS						STATUS
-----						------

1. MATHS - PART - 1 - POPULATION, 	-	Done
	SAMPLE, TYPES OF VARIABLES


2. MATHS - PART - 2 - MODE, MEDIAN, 	-	Done
	MEAN, RANGE, 
	STANDARD DEVIATION, VARIANCE	


3. MATHS - PART - 3 - OUTLIERS		-	Done


4. MATHS - PART - 4 - THE FIVE NUMBERS	-	Done
	SUMMARY, BOX PLOT, OUTLIER


5. MATHS - PART - 5 - SYMMETRY AND 	-	Done
	SKEWNESS


6. MATHS - PART - 6 - EXPLANATORY AND 	-	Done
	RESPONSIVE VARIABLES


7. MATHS - PART - 7 - REGRESSION 	-	Done
	AND R SQUARED


8. MATHS - PART - 8 - RESIDUALS		-	Done


9. MATHS - PART - 9 - THE NORMAL 	-	Hold
	DISTRIBUTION AND 
	68-95-99.7 RULE

10. MATHS - PART - 10 - MATRIX		-	Done

--------------------------------------------------

FEATURE ENGINEERING
-------------------

1. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 1	-	Done


2. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 2	-	Done

--------------------------------------------------

MACHINE LEARNING
----------------

1. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	INTRODUCTION

2. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TERMINOLOGY

3. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	DATA AND ML ALGORITHMS

4. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LEARNING FUNCTION

5. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TYPES OF MODELS

6. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LIFE CYCLE

7. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TRAIN & TEST DATASETS

8. DATA SCIENCE - MACHINE LEARNING 	- 	Upcoming topic	
	R VALUE

9. DATA SCIENCE - MACHINE LEARNING 	- 	Running topic	
	SIMPLE LINEAR REGRESSION




--------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

6. float(p)		->	To convert to float
7. int(p)		->	To convert to int
8. list(p)		->	Convert from seq to list
9. tuple(p)		->	Convert from seq to tuple
10. set(p)		->	Convert from seq to set

11. dict(p)		->	Convert from list of tups to dict

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. KeyError
4. ValueError
5. TypeError

6. IndexError
7. IndentationError
8. AttributeError
9. ModuleNotFoundError
10. FileNotFoundError

11. InvalidParameterError

--------------------------------

7. DATA SCIENCE - MACHINE LEARNING
	TRAIN & TEST DATASETS

--------------------------------

ML flow
-------

Data
	DataFrame
		Feature Engg
				Array
					Machine Learning Algorithm
					Cost/Error function
					Gradient Descent Algorithm
						Increase accuracy
						Reduce Error


ML steps
--------

	1. Importing the libraries
	2. Loading the dataset
	3. Data preparation
	4. Splitting the dataset
	5. Model creation
	6. Model training
	7. Prediction

--------------------------------

Case 1
------


train_test_split function can return single value

result = train_test_split(dataset)

--------------------------------

Case 2
------

train_test_split function can return two values also

X_train, X_test = train_test_split(dataset)


--------------------------------

input1	input2		output

Lets apply train_test_split() function

--------------------------------

IMP points
----------

1. Create Machine learning Alg
2. For ML alg we need to give input and output

Checkings
----------

1. Input and Output SHOULD BE array format
2. Input SHOULD BE always COLUMN format
3. Output SHOULD BE always ROW format

--------------------------------

# Creating inputs and output
# Both should be array
# Input is colum format, output is row format


import numpy as np

X = np.arange(20).reshape(2, 10).T
y = np.arange(10)

print(X)
print()
print(y)


--------------------------------

# train_test_split() function is returning 4 values


import numpy as np
from sklearn.model_selection import train_test_split

X = np.arange(20).reshape(2, 10).T
y = np.arange(10)

X_train, X_test, y_train, y_test = train_test_split(X, y)

print(X_train)
print()
print(X_test)
print()
print(y_train)
print()
print(y_test)

--------------------------------

# I need first time shuffle the data
# Other times I dont want to shuffle the data

import numpy as np
from sklearn.model_selection import train_test_split

X = np.arange(20).reshape(2, 10).T
y = np.arange(10)

X_train, X_test, y_train, y_test = train_test_split(X, y, random_state = 0)

print(X_train)
print()
print(X_test)
print()
print(y_train)
print()
print(y_test)

--------------------------------


from Nageswara Rao Anumolu (privately):    6:18 PM
Sir, the way you explained the whole test_train_split is amazing. You literally took a good amount of time for this.

thank you for recongnizing

--------------------------------


9. DATA SCIENCE - MACHINE LEARNING 	
	SIMPLE LINEAR REGRESSION

--------------------------------

			Hello World
			-----------

Python		->	print("Hello World")
Pandas		->	Creating Series/DataFrame
numpy		->	Creating an array
ML		->	Simple Linear Regression Alg

--------------------------------

Data1
-----
	input		output
	X		y
	feature		target

	Area		Rice packs
	--------------------------

	1		10
	2		20
	3		30
	4		40

	--------------------------

Regression:

-> It is technique
-> By using this we can find the the relationship between input and output

--------------------------------

Linear Regression

1. Simple Linear Regression

	one input	+	one output
	one feature	+	one target
	X		+	y


2. Multiple Linear Regression

	more inputs	+	one output
	Two inputs	+	one output

	X1, X2		+	y

	feat1, feat2	+	target

--------------------------------

Someone is asking the Difference between Algorithm and Model


Father Example
--------------

Father		->	Data Scientist

Daniel		->	Before training having Zero knowledge
		->	Algorithm


Daniel		->	After training having lot of knowledge
		->	Cat/Dog
		->	Model

--------------------------------

# Steps 1 and 2

print("Topic: Simple Linear Regression")
print()



print("Step 1: Importing the libraries")

import pandas as pd






print("Step 2: Loading the dataset")

df = pd.read_csv("homeprices.csv")


print()
print(df)

--------------------------------

# Plotting the dataset

print("Topic: Simple Linear Regression")
print()



print("Step 1: Importing the libraries")

import pandas as pd
import matplotlib.pyplot as plt






print("Step 2: Loading the dataset")

df = pd.read_csv("homeprices.csv")




print("Step Spl: Data Viz")


plt.xlabel('area')
plt.ylabel('price')

plt.scatter(
    df.area, 
    df.price, 
    color = 'red', 
    marker = '*'
)

plt.show()

--------------------------------

# 3. Data preparation
----------------------

Data preparation:
	Prepare input(X) and output(y)

Rules:
-----

	1. Both should be array
	2. Input == column format
	3. output == row format


----------------------

# input should be column array format

print("Topic: Simple Linear Regression")
print()



print("Step 1: Importing the libraries")

import pandas as pd






print("Step 2: Loading the dataset")

df = pd.read_csv("homeprices.csv")

new_df = df.drop("price", axis = 'columns')

print()
print(df)
print()
print(new_df.values)

--------------------------------

# Continue...
# Daniel

--------------------------------

Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom

--------------------------------
