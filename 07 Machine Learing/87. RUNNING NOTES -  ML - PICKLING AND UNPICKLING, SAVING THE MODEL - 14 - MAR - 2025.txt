RUNNING NOTES: 14 - MAR - 2025
--------------------------------

1. PREVIOUS TOPIC			-	ML: MULTIPLE LINEAR REGRESSION
2. CURRENT TOPIC			-	ML: PICKLING AND UNPICKLING
3. UPCOMING TOPIC			-	ML: SAVING THE MODEL
									         

----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

--------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done
10. PYTHON - STRING			-	Done
11. PYTHON - FUNCTIONS - PART - 1	-	Done
12. PYTHON - FUNCTIONS - PART - 2	-	Done
13. PYTHON - MODULE			-	Done
14. PYTHON - PACKAGE			-	Done
15. PYTHON - LIST DATA STRUCUTRE	-	Done
16. PYTHON - TUPLE DATA STRUCUTRE	-	Done
17. PYTHON - SET DATA STRUCUTRE		-	Done
18. PYTHON - DICTIONARY DATA STRUCUTRE	-	Done
19. PYTHON - OBJECT ORIENTED 		-	Done
	PROGRAMMING	

--------------------------------------------------

DATA ANALYSIS				
-------------

1. PANDAS - INTRODUCTION		-	Done
2. PANDAS - SERIES - INTRODUCTION	-	Done
3. PANDAS - NAN VALUE			-	Done
4. PANDAS - SERIES - ATTRIBUTES		-	Done
5. PANDAS - SERIES - METHODS		-	Done
6. PANDAS - DATAFRAME INTRODUCTION	-	Done
7. PANDAS - DATAFRAME - LOADING 	-	Done
	DIFFERENT FILES

8. PANDAS - DATAFRAME - ATTRIBUTES	-	Done
9. PANDAS - DATAFRAME - METHODS		-	Done

10. PANDAS - DATAFRAME - RENAMING 	-	Done
	COLUMN, INDEX

11. PANDAS - DATAFRAME - INPLACE 	-	Done
	PARAMETER

12. PANDAS -DATAFRAME - HANDLING 	-	Done
	MISSING NAN VALUES

13. PANDAS - DATAFRAME - SELECTION 	- 	Done
	LOC, ILOC

14. PANDAS - DATAFRAME - FILTERING	-	Done

15. PANDAS - DATAFRAME - SORTING	-	Done

16. PANDAS - DATAFRAME - GROUPBY	-	Done

17. PANDAS - DATAFRAME - MERGING 	-	Done
	OR JOINING

18. PANDAS - DATAFRAME - CONCAT		-	Done

19. PANDAS - DATAFRAME - ADDING, 	-	Done
	DROPPING ROWS AND COLUMNS

20. PANDAS - DATAFRAME - DATE AND 	-	Done
	TIME OPERATIONS

21. PANDAS - DATAFRAME - CONCATENATING	-	Done 
	MULTIPLE CSV FILES

--------------------------------------------------

DATA ANALYSIS PROJECT
---------------------

1. EDA PROJECT				-	Done

--------------------------------------------------

DATA VISUALIZATION
------------------

1. DATA VISUALIZATION PART 1		-	Done
2. DATA VISUALIZATION PART 2		-	Done
3. DATA VISUALIZATION FUNDAMENTALS	-	Done

4. DATA VISUALIZATION POWER BI		-	Upcoming topic	
		
--------------------------------------------------

NUMPY
-----

1. NUMPY INTRODUCTION			-	Done
2. NUMPY FUNDAMENTALS			-	Done
3. NUMPY ATTRIBUTES			-	Done
4. NUMPY METHODS			-	Done

--------------------------------------------------

MATHS						STATUS
-----						------

1. MATHS - PART - 1 - POPULATION, 	-	Done
	SAMPLE, TYPES OF VARIABLES


2. MATHS - PART - 2 - MODE, MEDIAN, 	-	Done
	MEAN, RANGE, 
	STANDARD DEVIATION, VARIANCE	


3. MATHS - PART - 3 - OUTLIERS		-	Done


4. MATHS - PART - 4 - THE FIVE NUMBERS	-	Done
	SUMMARY, BOX PLOT, OUTLIER


5. MATHS - PART - 5 - SYMMETRY AND 	-	Done
	SKEWNESS


6. MATHS - PART - 6 - EXPLANATORY AND 	-	Done
	RESPONSIVE VARIABLES


7. MATHS - PART - 7 - REGRESSION 	-	Done
	AND R SQUARED


8. MATHS - PART - 8 - RESIDUALS		-	Done


9. MATHS - PART - 9 - THE NORMAL 	-	Hold
	DISTRIBUTION AND 
	68-95-99.7 RULE

10. MATHS - PART - 10 - MATRIX		-	Done

--------------------------------------------------

FEATURE ENGINEERING
-------------------

1. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 1	-	Done


2. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 2	-	Done

--------------------------------------------------

MACHINE LEARNING
----------------

1. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	INTRODUCTION

2. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TERMINOLOGY

3. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	DATA AND ML ALGORITHMS

4. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LEARNING FUNCTION

5. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TYPES OF MODELS

6. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LIFE CYCLE

7. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TRAIN & TEST DATASETS


8. DATA SCIENCE - MACHINE LEARNING 	- 	Upcoming topic	
	R VALUE


9. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	SIMPLE LINEAR REGRESSION

9.1. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	SIMPLE LINEAR REGRESSION 
	EXAMPLE

9.2. DATA SCIENCE - MACHINE LEARNING 	- 	Share
	SIMPLE LINEAR REGRESSION 
	EXAMPLE

10. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	MULTIPLE LINEAR REGRESSION


12. DATA SCIENCE - MACHINE LEARNING 	- 	Running topic
	PICKLING AND UNPICKLING


13. DATA SCIENCE - MACHINE LEARNING 	- 	Upcoming topic
	SAVE MODEL USING JOBLIB AND 
	PICKLING


--------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

6. float(p)		->	To convert to float
7. int(p)		->	To convert to int
8. list(p)		->	Convert from seq to list
9. tuple(p)		->	Convert from seq to tuple
10. set(p)		->	Convert from seq to set

11. dict(p)		->	Convert from list of tups to dict

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. KeyError
4. ValueError
5. TypeError

6. IndexError
7. IndentationError
8. AttributeError
9. ModuleNotFoundError
10. FileNotFoundError

11. InvalidParameterError

--------------------------------

12. DATA SCIENCE - MACHINE LEARNING
	PICKLING AND UNPICKLING

--------------------------------

ML flow
-------

Data
	DataFrame
		Feature Engg
				Array
					Machine Learning Algorithm
					Cost function
					Gradient Descent Algorithm
						Increase accuracy
						Reduce Error
							Bias
							Variance


ML steps
--------

	1. Importing the libraries
	2. Loading the dataset
	3. Data preparation
	4. Splitting the dataset
	5. Model creation
	6. Model training
	7. Prediction

--------------------------------

1. Pickling and Unpickling


Why this topic?

-> By using this topic we can save the model into a file
-> Later we can load the file and do prediction



Pickling
--------

	-> Writing object info into a file	


Unpickling
----------

	-> Reading object info from a file

--------------------------------

How to do pickle and unpickling?

-> By using predefined module in python
-> Module name is called as pickle

-> Pickling will be done by using one function
	-> dump() function

-> Unpickling will be done by using a function
	-> load() function

--------------------------------

How the learning?

-> Pickling and Unpickling are python topics

-> First we will learn pure python examples

-> Later we will apply on Machine learning

--------------------------------

from Masud Siddiqi (privately):    5:50 PM
Good evening sir. Do we have session tomorrow?

Tomorrow evening 4PM, planning to conduct practical exam on pandas

No regular session

--------------------------------

demo1.py
-------

class Employee:
	def __init__(self, name, number, address):
		self.name = name	
		self.number = number
		self.address = address
	
	def display(self):
		print("Employee name is:", self.name)
		print("Employee number is:", self.number)
		print("Employee address is:", self.address)
		
emp = Employee("Daniel", 101, "Hyd")
emp.display()

--------------------------------

-> Lets apply pickling and unpickling

with
----

-> Keyword in python

-> Before with keyword

	Requirement 
		create a file
		open file
			write a some data
		Done
		we should close the file
		otherwise(memory issues)
		General: Leave my desk to go coffee
		Common mistake: Forget to close the file

-> with keyword
	Adv:	
		Open a file by using with keyword
		write the content
		no need to close the file
		with keyword will close the file automatically


--------------------------------

# Pickling and Unpickling

import pickle

class Employee:
	def __init__(self, name, number, address):
		self.name = name	
		self.number = number
		self.address = address
	
	def display(self):
		print("Employee name is:", self.name)
		print("Employee number is:", self.number)
		print("Employee address is:", self.address)
		

with open("daniel.pkl", "wb") as f1:
    emp = Employee("Prasad", 101, "Hyd")
    pickle.dump(emp, f1)
    
    print("Good news: Pickling is Done")
    
    
with open("daniel.pkl", "rb") as f2:
    obj = pickle.load(f2)
    obj.display()
    
    print("Good news is: Unpickling is Done")
    
--------------------------------


ML Steps
--------
	
	1. Importing the libraries
	2. Loading the dataset
	3. Data preparation
	4. Splitting the dataset
	5. Model creation
				model = LinearRegression()
				save the model into file

	6. Model training
	7. Prediction

--------------------------------

Save the model into a file

	1. By using pickle module	Understand
	2. By using joblib module	Realtime


--------------------------------

1. By using pickle module

demo1.py
--------

import pickle
import pandas as pd
from sklearn.linear_model import LinearRegression



df = pd.read_csv("homeprices.csv")


new_df = df.drop('price', axis = 'columns')

X = new_df.values
y = df["price"].values


model = LinearRegression()

model.fit(X, y)

# print(model.predict([[3400]]))

with open("prasad.pkl", "wb") as f1:
    pickle.dump(model, f1)
    print("Good news: Pickling is Done")


demo2.py
--------

import pickle

with open("prasad.pkl", "rb") as f2:
	obj = pickle.load(f2)
	print(obj.predict([[3400]]))
	
	

--------------------------------

# Pickling by using joblib module

import joblib
import pandas as pd
from sklearn.linear_model import LinearRegression

df = pd.read_csv("homeprices.csv")

new_df = df.drop('price', axis='columns')

model = LinearRegression()

model.fit(new_df.values, df.price.values)

joblib.dump(model, 'naresh')

print("Model got saved")

--------------------------------

import joblib

mj = joblib.load('naresh')

print(mj.predict([[5000]]))

--------------------------------

- We done today Session
- Daniel :)

--------------------------------

Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom

--------------------------------
