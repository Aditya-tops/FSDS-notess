RUNNING NOTES: 21 - MAY - 2025
--------------------------------

1. PREVIOUS TOPIC			-	PROJECT
2. CURRENT TOPIC			-	DATABASE
3. UPCOMING TOPIC			-	MODEL DEPLOYMENT
						COMPUTER VISION	
						POWER BI
				
----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

--------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done
10. PYTHON - STRING			-	Done
11. PYTHON - FUNCTIONS - PART - 1	-	Done
12. PYTHON - FUNCTIONS - PART - 2	-	Done
13. PYTHON - MODULE			-	Done
14. PYTHON - PACKAGE			-	Done
15. PYTHON - LIST DATA STRUCUTRE	-	Done
16. PYTHON - TUPLE DATA STRUCUTRE	-	Done
17. PYTHON - SET DATA STRUCUTRE		-	Done
18. PYTHON - DICTIONARY DATA STRUCUTRE	-	Done
19. PYTHON - OBJECT ORIENTED 		-	Done
	PROGRAMMING	

--------------------------------------------------

DATA ANALYSIS				
-------------

1. PANDAS - INTRODUCTION		-	Done
2. PANDAS - SERIES - INTRODUCTION	-	Done
3. PANDAS - NAN VALUE			-	Done
4. PANDAS - SERIES - ATTRIBUTES		-	Done
5. PANDAS - SERIES - METHODS		-	Done
6. PANDAS - DATAFRAME INTRODUCTION	-	Done
7. PANDAS - DATAFRAME - LOADING 	-	Done
	DIFFERENT FILES

8. PANDAS - DATAFRAME - ATTRIBUTES	-	Done
9. PANDAS - DATAFRAME - METHODS		-	Done

10. PANDAS - DATAFRAME - RENAMING 	-	Done
	COLUMN, INDEX

11. PANDAS - DATAFRAME - INPLACE 	-	Done
	PARAMETER

12. PANDAS -DATAFRAME - HANDLING 	-	Done
	MISSING NAN VALUES

13. PANDAS - DATAFRAME - SELECTION 	- 	Done
	LOC, ILOC

14. PANDAS - DATAFRAME - FILTERING	-	Done

15. PANDAS - DATAFRAME - SORTING	-	Done

16. PANDAS - DATAFRAME - GROUPBY	-	Done

17. PANDAS - DATAFRAME - MERGING 	-	Done
	OR JOINING

18. PANDAS - DATAFRAME - CONCAT		-	Done

19. PANDAS - DATAFRAME - ADDING, 	-	Done
	DROPPING ROWS AND COLUMNS

20. PANDAS - DATAFRAME - DATE AND 	-	Done
	TIME OPERATIONS

21. PANDAS - DATAFRAME - CONCATENATING	-	Done 
	MULTIPLE CSV FILES

--------------------------------------------------

DATA ANALYSIS PROJECT
---------------------

1. EDA PROJECT				-	Done

--------------------------------------------------

DATA VISUALIZATION
------------------

1. DATA VISUALIZATION PART 1		-	Done
2. DATA VISUALIZATION PART 2		-	Done
3. DATA VISUALIZATION FUNDAMENTALS	-	Done

4. DATA VISUALIZATION POWER BI		-	Upcoming topic	
		
--------------------------------------------------

NUMPY
-----

1. NUMPY INTRODUCTION			-	Done
2. NUMPY FUNDAMENTALS			-	Done
3. NUMPY ATTRIBUTES			-	Done
4. NUMPY METHODS			-	Done

--------------------------------------------------

MATHS						STATUS
-----						------

1. MATHS - PART - 1 - POPULATION, 	-	Done
	SAMPLE, TYPES OF VARIABLES


2. MATHS - PART - 2 - MODE, MEDIAN, 	-	Done
	MEAN, RANGE, 
	STANDARD DEVIATION, VARIANCE	


3. MATHS - PART - 3 - OUTLIERS		-	Done


4. MATHS - PART - 4 - THE FIVE NUMBERS	-	Done
	SUMMARY, BOX PLOT, OUTLIER


5. MATHS - PART - 5 - SYMMETRY AND 	-	Done
	SKEWNESS


6. MATHS - PART - 6 - EXPLANATORY AND 	-	Done
	RESPONSIVE VARIABLES


7. MATHS - PART - 7 - REGRESSION 	-	Done
	AND R SQUARED


8. MATHS - PART - 8 - RESIDUALS		-	Done


9. MATHS - PART - 9 - THE NORMAL 	-	Hold
	DISTRIBUTION AND 
	68-95-99.7 RULE

10. MATHS - PART - 10 - MATRIX		-	Done

--------------------------------------------------

FEATURE ENGINEERING
-------------------

1. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 1	-	Done


2. FEATURE ENGINEERING - 
	DATA PRE PROCESSING - PART - 2	-	Done

--------------------------------------------------

MACHINE LEARNING
----------------

1. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	INTRODUCTION

2. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TERMINOLOGY

3. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	DATA AND ML ALGORITHMS

4. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LEARNING FUNCTION

5. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TYPES OF MODELS

6. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LIFE CYCLE

7. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	TRAIN & TEST DATASETS


8. DATA SCIENCE - MACHINE LEARNING 	- 	Done	
	R VALUE


9. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	SIMPLE LINEAR REGRESSION

9.1. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	SIMPLE LINEAR REGRESSION 
	EXAMPLE

9.2. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	SIMPLE LINEAR REGRESSION 
	EXAMPLE

10. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	MULTIPLE LINEAR REGRESSION


11. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	PICKLING AND UNPICKLING


12. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	SAVE MODEL USING JOBLIB AND 
	PICKLING


13. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	POLYNOMIAL FEATURES

14. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	DUMMY VARIABLE, ONEHOTENCODING


15. DATA SCIENCE - MACHINE LEARNING 	-	Done
	- R VALUE


16. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	COST FUNCTION


17. DATA SCIENCE - MACHINE LEARNING 	- 	Done	
	REGRESSION COST FUNCTION


18. DATA SCIENCE - MACHINE LEARNING 	- 	Done	
	LOGISTIC REGRESSION
	BINARY CLASSIFICATION

19. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LOGISTIC REGRESSION
	MULTI CLASS CLASSIFICATION


20. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	DECISION TREE


21. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	RANDOM FOREST ALGORITHM



22. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	K-FOLD CROSS VALIDATION


23. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	SVM

24. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	GRADIENT DESCENT ALGORITHM


25. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	UNDERFITTING & OVERFITTING


26. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	BIAS - VARIANCE TRADE OFF


27. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	K - MEANS CLUSTERING


28. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	HYPER PARAMETER TUNING 
	GRIDSEARCH CV


29. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	K NEAREST NEIGHBOR


30. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	XGBOOST

31. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	NAIVE BAYES CLASSIFIER


32. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	CONFUSION MATRIX


33. DATA SCIENCE - MACHINE LEARNING 	- 	Done
	LASSO & RIDGE REGRESSION	


34. MODEL DEPLOYMENT			-	Upcoming topic

--------------------------------------------------

DEEP LEARNING
-------------

1. DEEP LEARNING - INTRODUCTION		-	Done
2. DEEP LEARNING - LIBRARIES		-	Done

3. DEEP LEARNING - IMPORTANT 		-	Done
	TERMINOLOGY

4. DEEP LEARNING - MULTILAYER 		-	Done
	PERCEPTRONS

5. DEEP LEARNING - MULTILAYER 		-	Done
	PERCEPTRONS EXAMPLE	

6. DEEP LEARNING - EVALUATE MODEL 	-	Done
	PERFORMANCE	

7. DEEP LEARNING - EVALUATE MODEL 	-	Done
	SAVE MODEL

-  DATA SCIENCE - ENV - PYCHARM		-	Done


8. DEEP LEARNING - BEST MODEL CHECK 	-	Done
	POINT

9. DEEP LEARNING - VISUALIZE MODEL 	-	Done
	ACCURACY & SCORE

10. DEEP LEARNING - COMPUTER VISION	-	Upcoming topic


--------------------------------------------------

NATURAL LANGUAGE PROCESSING(NLP)
---------------------------

1. NLP - INTRODUCTION			-	Done
2. NLP - TEXT WRANGLING AND CLEANING	-	Done
3. NLP - REPLACING AND CORRECTING WORDS	-	Done
4. NLP - COMPONENTS IN NLP - USE CASE	-	Done

5. NLP - BAG OF WORDS, TF AND IDF	-	Done

6. NLP - TWITTER SENTIMENT ANALYSIS 	-	Done
	USING TEXTBLOB	

7. NLP - SPACY LIBRARRY			-	Done

--------------------------------------------------

PROJECTS
--------

1. ECOMVISION				-	Done

2. E-COMMERCE PURCHASE 			-	Done
	INTENTION MODEL			

--------------------------------------------------

MYSQL
-----

0. DATA SCIENCE - MYSQL - INSTALLATION	-	Done

1. DATA SCIENCE - MYSQL - INTRODUCTION	-	Done

2. DATA SCIENCE - MYSQL - CREATE, 	-	Done
	SELECT, DROP - DATABASE

4. DATA SCIENCE - MYSQL - DDL AND DML	-	Done

5. DATA SCIENCE - MYSQL - CREATE. 	-	Done
	INSERT, SELECT DATA, 
	DISTINCT, ALTER - TABLE

6. DATA SCIENCE - MYSQL - WHERE CLUSE, 	-	Done
	OPERATORS

7. DATA SCIENCE - MYSQL - CONSTRAINTS	-	Running topic

8. DATA SCIENCE - MYSQL - IMP FUNCTIONS	-	Upcoming topic

9. DATA SCIENCE - MYSQL - PANDAS 	-	Upcoming topic
	DATAFRAME

--------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

6. float(p)		->	To convert to float
7. int(p)		->	To convert to int
8. list(p)		->	Convert from seq to list
9. tuple(p)		->	Convert from seq to tuple
10. set(p)		->	Convert from seq to set

11. dict(p)		->	Convert from list of tups to dict

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. KeyError
4. ValueError
5. TypeError

6. IndexError
7. IndentationError
8. AttributeError
9. ModuleNotFoundError
10. FileNotFoundError

11. InvalidParameterError

--------------------------------------

5. DATA SCIENCE - MYSQL - CREATE. 	
	INSERT, SELECT DATA, 
	DISTINCT, ALTER - TABLE
--------------------------------------

Query to select distinct values in columns

mysql> select distinct city from persons;


--------------------------------------




Query to add column to Table

mysql> alter table persons
    -> add email varchar(255);



--------------------------------------



Query to drop a column from table

mysql> alter table persons
    -> drop column email;




--------------------------------------


Query to rename a column in a table


mysql> alter table persons
    -> rename column city to location;

--------------------------------------


Query to check the table

mysql> select * from persons;


mysql> select * from persons;
+----------+------------+-----------+------------------------+-----------+
| personid | lastname   | firstname | address                | location  |
+----------+------------+-----------+------------------------+-----------+
|      101 | Daniel     | K         | Near to Data Sci area  | Hyderabad |
|      102 | Nireekshan | D         | Near to AI theatre     | Banglore  |
|      103 | Ranjan     | M         | Near to Python theatre | Hyderabad |
|      104 | Prasad     | K         | Near to Python road    | Hyderabad |
+----------+------------+-----------+------------------------+-----------+
4 rows in set (0.00 sec)


--------------------------------------

Query to filter the table: using where


# filtering data using where

mysql> select * from persons
    -> where lastname = 'daniel';

--------------------------------------


# filtering data using where

mysql> select * from persons
    -> where location = 'hyderabad';

--------------------------------------


# filtering data using where + greater than operator

mysql> select * from persons
    -> where personid > 101;


--------------------------------------

# filtering data using where, between, and operators

mysql> select * from persons
    -> where personid between 101 and 104;


--------------------------------------


# filtering data using where + like operators


mysql> select * from persons
    -> where location like 'h%';


--------------------------------------



# filtering data using where + in operators


mysql> select * from persons
    -> where lastname in('daniel', 'nireekshan');


--------------------------------------


# filtering data using where + not in operators

mysql> select * from persons
    -> where lastname not in('daniel', 'nireekshan');


--------------------------------------


# filtering data using where + and operators


mysql> select * from persons
    -> where lastname='daniel' and location='hyderabad';


--------------------------------------


# filtering data using where + or operators

mysql> select * from persons
    -> where lastname = "prasad" or location = 'london';



--------------------------------------

# filtering data using where + not operators

mysql> select * from persons
    -> where not location = 'Banglore';


--------------------------------------

Let me share one of my exp...

2019	->	I was in Banglore
	->	Uploaded my profile: Data Scientist
	->	Got one call: Sandisk(Very good company)
	->	Introduction
	->	Person:
			Instead of asking
			Python, ML, NLP, Data Sci(project)

			asking: Database questions
			Sorry, I am Data Scientist not db guy

--------------------------------------

Infosys:
	Project1
			Big project: 2 yrs duration
			Team size: 10 members

	Project2
			Small project: 1 yrs
			Team size: 5 members
	Project3



If you wanted to get a job either fresher or exp

	min: you have to give	1 to 10


--------------------------------------

Daniel datasets:	sales1.csv	->	600 rows
	
			one day


kaggle dataset:		data.csv	->	million rows

			EDA		->	7 week			


company dataset		data1.csv
	
					->	Peta bytes
			months to do EDA


processing
		serial		->	lot of time
		parallel	->	quick to finish the work


--------------------------------------

from Iddipilli Karthik (privately):    6:26 PM
what if we gave wrong command and took weeks before recognizing it and try recorrecting it

-> Ensure we should not give
-> We need to apply logging mechanism
-> We can debug very quicklly

--------------------------------------

7. DATA SCIENCE - MYSQL - CONSTRAINTS
-------------------------------------

Query to create a table

create table persons11(
id int,
lastname varchar(255),
firstname varchar(255),
age int
);


Query to insert the data into table

insert into persons11(id, lastname, firstname, age) values(Null, 'daniel', 'k', 34);

insert into persons11(id, lastname, firstname, age) values(2, 'daniel1', 'k1', 35);


insert into persons11(id, lastname, firstname, age) values(2, 'daniel2', 'k2', 36);


-------------------------------------

Not null
--------

create table persons12(
id int not null,
lastname varchar(255) not null,
firstname varchar(255) not null,
age int
);

insert into persons12(id, lastname, firstname, age) values(Null, 'daniel', 'k', 34);

-------------------------------------

Primary key
-----------

create table persons13(
id int not null,
lastname varchar(255) not null,
firstname varchar(255) not null,
age int,
primary key(id)
);


insert into persons13(id, lastname, firstname, age) values(1, 'daniel1', 'k1', 34);


insert into persons13(id, lastname, firstname, age) values(2, 'daniel2', 'k2', 35);


insert into persons13(id, lastname, firstname, age) values(1, 'daniel3', 'k3', 36);


-------------------------------------

Check constraint
-----------------

create table persons14(
id int not null,
lastname varchar(255) not null,
firstname varchar(255) not null,
age int,
check (age>=18)
);

insert into persons14(id, lastname, firstname, age) values(1, 'daniel3', 'k3', 36);


insert into persons14(id, lastname, firstname, age) values(2, 'daniel2', 'k2', 16);


-------------------------------------

from Masud Siddiqi (privately):    6:34 PM
What is the difference between empty string (‘’), space character (‘ ’), and null?

In python:
	empty string == empty character	same
	null	->	empty object

	empty string and null not same

-------------------------------------

-> We done today session
		- Daniel

-------------------------------------

Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom

--------------------------------

D@1234niel#

--------------------------------