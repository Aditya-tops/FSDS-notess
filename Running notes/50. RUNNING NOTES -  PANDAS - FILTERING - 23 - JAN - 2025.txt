RUNNING NOTES: 23 - JAN - 2025
--------------------------------

1. PREVIOUS TOPIC			-	PANDAS - DATAFRAME SELECTION LOC & ILOC
2. CURRENT TOPIC			-	PANDAS - DATAFRAME FILTERING
3. UPCOMING TOPIC			-	PANDAS - DATAFRAME SORTING
						         

----------------------------------------------------------------


INDEX
---------

0. DATA SCIENCE DEMO			-	Done

1. DATA SCIENCE FUNDAMENTALS		-	Done

--------------------------------------------------

PYTHON PROGRAMMING LANG
-----------------------

0. PYTHON - INSTALLATION		-	Done

1. PYTHON - INTRODUCTION		-	Done
2. PYTHON - KEYWORDS			-	Done
3. PYTHON - HELLO WORLD PROGRAM		-	Done
4. PYTHON - NAMING CONVENTIONS		-	Done
5. PYTHON - VARIABLES			-	Done
6. PYTHON - DATA TYPES			-	Done
7. PYTHON - OPERATORS			-	Done
8. PYTHON - INPUT & OUTPUT		-	Done
9. PYTHON - FLOW CONTROL		-	Done
10. PYTHON - STRING			-	Done
11. PYTHON - FUNCTIONS - PART - 1	-	Done
12. PYTHON - FUNCTIONS - PART - 2	-	Done
13. PYTHON - MODULE			-	Done
14. PYTHON - PACKAGE			-	Done
15. PYTHON - LIST DATA STRUCUTRE	-	Done
16. PYTHON - TUPLE DATA STRUCUTRE	-	Done
17. PYTHON - SET DATA STRUCUTRE		-	Done
18. PYTHON - DICTIONARY DATA STRUCUTRE	-	Done
19. PYTHON - OBJECT ORIENTED 		-	Done
	PROGRAMMING	

--------------------------------------------------


DATA ANALYSIS				
-------------

1. PANDAS - INTRODUCTION		-	Done
2. PANDAS - SERIES - INTRODUCTION	-	Done
3. PANDAS - NAN VALUE			-	Done
4. PANDAS - SERIES - ATTRIBUTES		-	Done
5. PANDAS - SERIES - METHODS		-	Done
6. PANDAS - DATAFRAME INTRODUCTION	-	Done
7. PANDAS - DATAFRAME - LOADING 	-	Done
	DIFFERENT FILES


8. PANDAS - DATAFRAME - ATTRIBUTES	-	Done

9. PANDAS - DATAFRAME - METHODS		-	Done

10. PANDAS - DATAFRAME - RENAMING 	-	Done
	COLUMN, INDEX

11. PANDAS - DATAFRAME - INPLACE 	-	Done
	PARAMETER


12. PANDAS -DATAFRAME - HANDLING 	-	Done
	MISSING NAN VALUES


13. PANDAS - DATAFRAME - SELECTION 	- 	Done
	LOC, ILOC

14. PANDAS - DATAFRAME - FILTERING	-	Running session


15. PANDAS - DATAFRAME - SORTING	-	Upcoming session


--------------------------------------------------

Predefined functions
---------------------

1. print(p)		->	To display the output
2. type(p)		->	To check the data type
3. range(p)		->	To get range of values
4. input(p)		->	To take valut at runtime/dynamically
5. len(p)		->	To find number of values in sequence

--------------------------------

Errors
------

1. SyntaxError
2. NameError
3. KeyError
4. ValueError
5. TypeError

6. IndexError
7. IndentationError
8. AttributeError
9. ModuleNotFoundError
10. FileNotFoundError

--------------------------------

14. PANDAS - DATAFRAME - FILTERING

--------------------------------

Filter
------

Data:	1, 2, 3, 4, 5, 6, 7, 8, 9, 10

		value < 6

filter1: 1, 2, 3, 4, 5


		value < 6

filter2: 	7, 8, 9, 10

		Value greater than 3 and less than 9

filter3:	4, 5, 6, 7, 8

--------------------------------

We can implement filter by using below topics

	1. Relational operators
		1. Single condition
		2. Multiple condition

	2. loc and iloc


--------------------------------

# Creating a DataFrame

import pandas as pd

df = pd.read_csv("sales4.csv")

print(df)

--------------------------------

# Filter data by using single condition
# df["Product_Cost"] > 65000

import pandas as pd

df = pd.read_csv("sales4.csv")

con1 = df["Product_Cost"] > 65000

print(df[con1])


--------------------------------

# filtering the data by using single condition

import pandas as pd

df1 = pd.read_csv("sales4.csv")

con1 = df1["Product_Cost"] > 65000

df2 = df1[con1]

print(df2)

--------------------------------

# Filtering the data by using single condition

import pandas as pd

df1 = pd.read_csv("sales4.csv")

con1 = df1["Product_Cost"] > 70000

df2 = df1[con1]

print(df2)

--------------------------------

# Filtering the data by using two conditions

import pandas as pd

df1 = pd.read_csv("sales4.csv")

con1 = df1['Product_Cost'] > 50000
con2 = df1['Product_Cost'] < 60000

print(df1[con1	&	con2])

--------------------------------

Kind info
---------

Python		->	and operator
pandas		->	& symbol

--------------------------------

from Hrishi to everyone:    6:03 PM
for this specific dataframe topic we can use the filter function

Boss we can use, let us discuss during project

--------------------------------

# df1["Product_Name"] == "iPhone 11"
# df1["Customer_Name"] == "Nireekshan"



import pandas as pd

df1 = pd.read_csv("sales4.csv")

con1 = df1["Product_Name"] == "iPhone 11"
con2 = df1["Customer_Name"] == "Nireekshan"

print(df1[con1	&	con2])

--------------------------------

Jayesh sir:	How to apply nested conditions

Data:
-----

	1, 2, -30, "Daniel", "Raju", 1.23

con1	get numbers	1, 2, -30, 1.23
con2	get +ve		1, 2, 1.23

--------------------------------

# df1["Product_Name"] == "iPhone 11"
# df1["Customer_Name"] == "Nireekshan"




import pandas as pd

df1 = pd.read_csv("sales4.csv")

con1 = df1["Product_Name"] == "iPhone 11"
con2 = df1["Customer_Name"] == "Shahid"

print(df1[con1	&	con2])


--------------------------------

# Filtering the data by using loc

import pandas as pd

df1 = pd.read_csv("sales4.csv")

con1 = df1["Product_Name"] == "iPhone 11"
con2 = df1["Customer_Name"] == "Shahid"

print(df1[con1		&	con2])
print()
print(df1.loc[con1	&	con2])

--------------------------------

# Accessing data by using iloc indexer

import pandas as pd

df1 = pd.read_csv("sales4.csv")

df2 = df1.iloc[:5, ]

print(df2)

--------------------------------

# Filtering the data by using loc indexer

import pandas as pd

df1 = pd.read_csv("sales4.csv")

rows = df1.index[0:]
cols = ["Product_Name", "Customer_Id"]

df2 = df1.loc[rows, cols]

print(df2)

--------------------------------

# Filtering the data by using loc indexer

import pandas as pd

df1 = pd.read_csv("sales4.csv")

rows = df1.index[0:4]
cols = ["Product_Name", "Customer_Id"]

df2 = df1.loc[rows, cols]

print(df2)

--------------------------------

# Filtering the data by using loc indexer

import pandas as pd

df1 = pd.read_csv("sales4.csv")

rows = df1.index[5:]
cols = ["Product_Name", "Customer_Id"]

df2 = df1.loc[rows, cols]

print(df2)

--------------------------------

# Filtering the data by using loc

import pandas as pd

df1 = pd.read_csv("sales4.csv")

a = df1.Product_Name == "LG Washing Machine"
b = df1.Customer_Id == 1

c = a | b

df2 = df1.loc[c]

print(df2)

--------------------------------

# isin() method

import pandas as pd

df1 = pd.read_csv("sales4.csv")

a = ["Macbook Pro Laptop"]
b = df1.Product_Name.isin(a)

df2 = df1[b]

print(df2)

--------------------------------

Let me continue tomorrow :)

- Daniel

--------------------------------

Daily
-----

1. Running notes				->	Sharing
2. Materials (PDF format)			->	Sharing

We are sharing by using 			->	Google classroom

--------------------------------
